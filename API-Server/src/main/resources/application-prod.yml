spring:
  config:
    activate:
      on-profile: prod
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: ${PROD_GITHUB_CLIENT_ID}
            clientSecret: ${PROD_GITHUB_CLIENT_SECRET}
            redirectUri: ${PROD_GITHUB_REDIRECT_URI}
            baseUri: "https://github.com/login/oauth/authorize"

  datasource:
    url: ${PROD_DB_HOST}
    username: ${PROD_DB_USER}
    password: ${PROD_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
    defer-datasource-initialization: false
    sql:
      init:
        mode: never
  data:
    redis:
      host: redis
      port: 6379

  # Kafka
#  kafka:
#    bootstrap-servers: 10.0.75.183:9092,10.0.90.35:9092,10.0.84.239:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#    consumer:
#      group-id: _
#      enable-auto-commit: true
#      auto-offset-reset: earliest
#      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      properties:
#        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
#        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
#      max-poll-records: 1000
#    ### dev-prod 분리 ###
#    template:
#      default-topic: lgtm-prod
#    topic:
#      user-log: user-data-log-prod
#      chat-message: chat-message-prod
#    group-id:
#      user-log: user-log-c-prod-001
#      chat-message: chat-message-c-prod-001
#  data:
#    redis:
#      cluster:
#        nodes: ${PROD_REDIS_NODES}
